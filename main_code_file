resource "aws_vpc" "krish" {
  cidr_block       = "10.0.0.0/24"
  instance_tenancy = "default"

  tags = {
    Name = "krish"
  }
}
resource "aws_subnet" "app-subnet2-public" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.32/28"

  tags = {
    Name = "app-subnet2-public"
}
}
resource "aws_subnet" "app-subnet1-public" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.48/28"

  tags = {
    Name = "app-subnet1-public"
  }
}
resource "aws_subnet" "web-subnet1-public" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.0/28"

  tags = {
    Name = " web-subnet1-public"
  }
}
resource "aws_subnet" "web-subnet2-public" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.16/28"

  tags = {
    Name = "web-subnet2-public"
  }
}
resource "aws_subnet" "data-subnet1-private" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.64/28"

  tags = {
    Name = "data-subnet1-private"
  }
}
resource "aws_subnet" "data-subnet2-private" {
  vpc_id     = aws_vpc.krish.id
  cidr_block = "10.0.0.80/28"

  tags = {
    Name = "data-subnet2-private"
  }
}

resource "aws_lb_target_group" "target-group" {
  name     = "target-group"
  port     = 80
  protocol = "HTTP"
  vpc_id   = aws_vpc.krish.id

  target_health_state {
    enable_unhealthy_connection_termination = false
  }
}
# LOAD BALANCER

resource "aws_lb" "load-balancer" {
  name               = "load-balancer"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.security-group1.id, aws_security_group.data-security-group2.id]
  subnets            = [aws_subnet.web-subnet1-public.id, aws_subnet.web-subnet2-public.id, aws_subnet.app-subnet1-public.id]

}
resource "aws_db_subnet_group" "data-base-subnet" {
  name       = "bata-base-subnet"
  subnet_ids = [aws_subnet.data-subnet1-private.id, aws_subnet.data-subnet2-private.id, aws_subnet.web-subnet1-public.id, aws_subnet.web-subnet2-public.id, aws_subnet.app-subnet2-public.id]

  tags = {
    Name = "data-base-subnet"
  }
}
resource "aws_db_instance" "data-base-instances" {
  allocated_storage    = 10
db_subnet_group_name   = aws_db_subnet_group.data-base-subnet.id
  db_name              = "mydb"
  engine               = "mysql"
  engine_version       = "8.0"
  instance_class       = "db.t3.micro"
  username             = "admin"
  password             = "admin123"
  parameter_group_name = "default.mysql8.0"
  skip_final_snapshot  = true
vpc_security_group_ids = [aws_security_group.security-group1.id, aws_security_group.data-security-group2.id]
}

resource "aws_security_group" "security-group1" {
  name        = "security-groups1"
  description = "Allow TLS inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.krish.id
  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
cidr_blocks      = ["0.0.0.0/0"]
}
  tags = {
    Name = "security-group1"
  }
}
resource "aws_security_group" "data-security-group2" {
  name        = "data-security-groups2"
  description = "Allow TLS inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.krish.id
  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
cidr_blocks      = ["0.0.0.0/0"]
}
  tags = {
    Name = "data-security-group2"
  }
}
resource "aws_route_table" "route-table" {
  vpc_id = aws_vpc.krish.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.internet-gate-way.id
  }
  tags = {
    Name = "route-table"
}
}
resource "aws_route_table" "route-table-private" {
  vpc_id = aws_vpc.krish.id
    route {
    cidr_block = "0.0.0.0/0"
nat_gateway_id = aws_nat_gateway.nat-gate-way.id
  }
  tags = {
    Name = "route-table-private"
}
}
resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.data-subnet1-private.id
  route_table_id = aws_route_table.route-table-private.id
}
resource "aws_route_table_association" "b" {
  subnet_id      = aws_subnet.data-subnet2-private.id
  route_table_id = aws_route_table.route-table-private.id
}
resource "aws_route_table_association" "c" {
  subnet_id      = aws_subnet.app-subnet1-public.id
  route_table_id = aws_route_table.route-table.id
}
resource "aws_route_table_association" "d" {
  subnet_id      = aws_subnet.app-subnet2-public.id
  route_table_id = aws_route_table.route-table.id
}
resource "aws_route_table_association" "e" {
  subnet_id      = aws_subnet.web-subnet1-public.id
  route_table_id = aws_route_table.route-table.id
}
resource "aws_route_table_association" "f" {
  subnet_id      = aws_subnet.web-subnet2-public.id
  route_table_id = aws_route_table.route-table.id
}
resource "aws_nat_gateway" "nat-gate-way" {
  allocation_id = "eipalloc-06cd1dcd9a7a68249"
  subnet_id     = aws_subnet.data-subnet1-private.id

  tags = {
   Name = "nat-gate-way"
  }
}
resource "aws_internet_gateway" "internet-gate-way" {
  vpc_id = aws_vpc.krish.id

  tags = {
    Name = "internet-gate-way"
  }
}
resource "aws_instance" "demoinstance" {
  ami                         = "ami-08a0d1e16fc3f61ea"
  instance_type               = "t2.micro"
  count                       = 1
  key_name                    = "exmpla123"
  vpc_security_group_ids      = ["${aws_security_group.data-security-group2.id}"]
  subnet_id                   = "${aws_subnet.web-subnet1-public.id}"
  associate_public_ip_address = true
  user_data                   = "${file("data.sh")}"

  tags = {
    Name = "demoinstance"
  }
}

resource "aws_key_pair" "exmpla123" {
  key_name   = "exmpla123"
public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 jamanjyothisaikrishna2002@gmail.com"
}
resource "aws_instance" "demo_instance2" {
  ami                         = "ami-08a0d1e16fc3f61ea"
  instance_type               = "t2.micro"
  count                       = 1
  key_name                    = "project"
  vpc_security_group_ids      = [aws_security_group.data-security-group2.id]
  subnet_id                   = aws_subnet.web-subnet2-public.id
  associate_public_ip_address = true
  user_data                   = "${file("data2.sh")}"

  tags = {
    Name = "demo_instance2"
  }
}

resource "aws_lb_target_group_attachment" "att" {
  target_group_arn = aws_lb_target_group.target-group.arn
  target_id        = aws_instance.demoinstance[0].id
  port             = 80

depends_on = [aws_instance.demoinstance]

}
resource "aws_lb_target_group_attachment" "test" {
  target_group_arn = aws_lb_target_group.target-group.arn
  target_id        = aws_instance.demo_instance2[0].id
  port             = 80
depends_on = [aws_instance.demo_instance2]
}

resource "aws_lb_listener" "my-listener" {
  load_balancer_arn = aws_lb.load-balancer.arn
  port              = 80
  protocol          = "HTTP"
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.target-group.arn
  }
}

resource "aws_lb_listener_rule" "my_listener_rule" {
  listener_arn = aws_lb_listener.my-listener.arn
  priority     = 100

  action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.target-group.arn
  }
condition {
    path_pattern {
      values = ["/my_listener_rule/*"]
    }
  }
}
